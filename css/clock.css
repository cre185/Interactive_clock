#clock_svg{
    width: 100%;
    height: 100%;
}

#bar_rightside
{
    background: #2f363e;
    flex-direction: column;
}

#bar_leftside
{
    background: #2f363e;
}

#bar_center
{
    background: #2f363e;
}

#button_new_alarmclock
{
    position: absolute;
    left: 50%;
    bottom: 13%;
    transform: translateX(-50%);
    z-index: 1;
}

.container a
{
    position: relative;
    padding: 16px 30px;
    font-size: 1.5em;
    color: var(--clr4);
    text-shadow: 0 0 15px var(--clr4);
    text-decoration: none;
    transition: 0.5s;
    border: 2px solid rgba(0, 0, 0, 0.5);
}

.container a:hover
{
    color: white;
    border: 2px solid rgba(0, 0, 0, 0);
    text-shadow: 0 0 0px var(--clr4);
}

.container a::before
{
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--clr4);
    z-index: -1;
    transform: scale(0);
    transition: 0.5s;
}

.container a:hover::before
{
    transform: scale(1);
    transition-delay: 0.5s;
    box-shadow: 0 0 10px var(--clr4),
    0 0 30px var(--clr4),
    0 0 60px var(--clr4);
}

.container a span
{
    position: absolute;
    background: var(--clr4);
    pointer-events: none;
    box-shadow: 0 0 10px var(--clr4),
    0 0 20px var(--clr4),
    0 0 30px var(--clr4),
    0 0 50px var(--clr4),
    0 0 100px var(--clr4);
}

.container a span:nth-child(1), .container a span:nth-child(3)
{
    width: 40px;
    height: 4px;
}

.container a span:nth-child(2), .container a span:nth-child(4)
{
    width: 4px;
    height: 40px;
}

.container a span:nth-child(1)
{
    top: calc(50% - 2px);
    left: -50px;
    transform-origin: left;
    transition: 0.5s ease-in-out;
    transition-delay: 0.25s;
}

.container a:hover span:nth-child(1)
{
    left: 50%;
    transform: scaleX(0);
    transition-delay: 0s;
}

.container a span:nth-child(3)
{
    top: calc(50% - 2px);
    right: -50px;
    transform-origin: right;
    transition: 0.5s ease-in-out;
    transition-delay: 0.25s;
}

.container a:hover span:nth-child(3)
{
    right: 50%;
    transform: scaleX(0);
    transition-delay: 0s;
}

.container a span:nth-child(2)
{
    left: calc(50% - 2px);
    top: -50px;
    transform-origin: top;
    transition: 0.5s ease-in-out;
    transition-delay: 0.25s;
}

.container a:hover span:nth-child(2)
{
    top: 50%;
    transform: scaleY(0);
    transition-delay: 0s;
}

.container a span:nth-child(4)
{
    left: calc(50% - 2px);
    bottom: -50px;
    transform-origin: bottom;
    transition: 0.5s ease-in-out;
    transition-delay: 0.25s;
}

.container a:hover span:nth-child(4)
{
    bottom: 50%;
    transform: scaleY(0);
    transition-delay: 0s;
}

.alarmclock_block{
    position: relative;
}
.alarmclock_block p{
    font-size: 40px;
    line-height: 40px;
    float:left;
    text-align: left;
    margin-right: 60px;
    position:absolute;
    top:30px;
    color: #f1f1f1;
}
.alarmclock_block .alarmclock_close{
    position:absolute;
    top:30px;
    right:50px;
    z-index: 1;
}
/*
.alarmclock_block .alarmclock_selected{
    position:absolute;
    top:10px;
    right:45px;
    width:20px;
    height:20px;
}
*/

#messageBox {
    position: fixed; /* 使用 fixed 定位，使其悬浮在窗口中 */
    top: 50%; /* 距离顶部的距离为窗口高度的一半 */
    left: 50%; /* 距离左边的距离为窗口宽度的一半 */
    transform: translate(-50%, -50%); /* 使用 translate 属性将元素在水平和垂直方向上居中 */
    background-color: #363e47; /* 背景颜色，可以根据需要修改 */
    width: 40%;
    height: 40%;
    color: #f1f1f1;
    font-size: 50px;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    border-radius: 15px;
    border: 1px solid #000; /* 边框，可以根据需要修改 */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); /* 添加阴影效果，可以根据需要修改 */
}

#messageBox p {
    position: absolute;
    left: calc(50% - 100px);
    top: calc(50% - 50px);
}

#messageBox button {
    position: absolute;
    width: 200px;
    height: 50px;
    background-color: #363e47;
    border-radius: 15px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    border-bottom: black solid 1px;
    left: calc(50% - 100px);
    bottom: 20px;
    color: #f1f1f1;
    font-size: 30px;
}

.bar_button {
    margin: auto;
    border-width: 0;
    float: left;
    width: 272px;
    height: 50px;
    background-color: #363e47;
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    border-bottom: black solid 1px;
    color: #f1f1f1;
}

.bar_buttons {
    position: absolute;
    left: 29px;
    margin: auto;
}

#hour_up, #minute_up, #second_up, #hour_down, #minute_down, #second_down{
    filter: invert(100%);
}

.bar_time_item {
    color: #f1f1f1;
}


#bar_adjust {
    position: absolute;
    width: 330px;
    height: 330px;
    left: 0px;
    top: 10%;
    background-color: #363e47;
    border-top-right-radius: 10px;
    border-bottom-right-radius: 10px;
    box-shadow: 0 4px 5px rgba(0, 0, 0, 0.2);
}


/* 创建一个开关按钮的样式 */
.switch {
position: absolute;
display: inline-block;
width: 60px;
height: 34px;
right: 30px;
top: 30px;
}

/* 隐藏开关按钮的输入框 */
.switch input { 
opacity: 0;
width: 0;
height: 0;
}

/* 创建滑块的样式 */
.slider {
position: absolute;
cursor: pointer;
top: 0;
left: 0;
right: 0;
bottom: 0;
background-color: #363e47;
transition: .4s;
}

/* 创建滑块的初始状态 */
.slider:before {
position: absolute;
content: "";
height: 26px;
width: 26px;
left: 4px;
bottom: 4px;
background-color: white;
transition: .4s;
}

/* 当输入框被选中时，改变滑块的背景颜色 */
input:checked + .slider {
background-color: #218316;
}

/* 当输入框被聚焦时，给滑块添加阴影 */
input:focus + .slider {
box-shadow: 0 0 1px #2f363e;
}

/* 当输入框被选中时，移动滑块 */
input:checked + .slider:before {
transform: translateX(26px);
}

/* 创建滑块的圆角样式 */
.slider.round {
border-radius: 34px;
}

/* 创建滑块的圆形样式 */
.slider.round:before {
border-radius: 50%;
}

/* 给元素添加边缘羽化效果 */
.alarmclock_block {
    border-radius: 10px; /* 调整这个值来控制羽化效果的强度 */
}

/* 给元素添加阴影效果 */
.alarmclock_block {
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* 调整这个值来控制阴影的颜色、大小和模糊程度 */
}